[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[project]
name = "eralchemy"
version = "1.4.1"
description = "Simple entity relation (ER) diagrams generation"
authors = [
  { name = "Alexis Benoist", email = "Alexis-benoist@users.noreply.github.com"},
  { name = "Florian Maurer", email = "fmaurer@disroot.org"},
]
license = {text = "Apache-2.0"}
readme = "README.md"

keywords = ["sql", "ORM", "relational databases", "ER diagram", "render"]

classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
]
requires-python = ">=3.8"
dependencies = [
  "sqlalchemy >= 1.4"
]

[project.urls]
homepage = "https://github.com/eralchemy/eralchemy"
repository = "https://github.com/eralchemy/eralchemy"

[project.optional-dependencies]
graphviz = ["graphviz >= 0.20.3"]
pygraphviz = ["pygraphviz >= 1.9"]
ci = [
  "flask-sqlalchemy >= 2.5.1",
  "psycopg2 >= 2.9.3",
  "pytest >= 7.4.3",
  "pygraphviz >= 1.9",
  "graphviz >= 0.20.3",
]
dev = [
  "nox",
  "pre-commit"
]
docs = [
  "sphinx>=6.2.1",
  "pydata-sphinx-theme",
  "sphinx-copybutton",
  "sphinx-design",
]

[project.scripts]
eralchemy = "eralchemy.main:cli"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py38, py39, py310, py310-SA20, py311, py311-SA20, py312

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310, py310-SA14, py310-SA20
    3.11: py311, py311-SA14, py311-SA20
    3.12: py312

[testenv]
extras = ci
deps =
  py310-SA20: sqlalchemy~=2.0.4
  py311-SA20: sqlalchemy~=2.0.4
commands =
  pytest
"""

[tool.pytest]
testpaths = "tests"

[tool.pytest.ini_options]
markers = ["external_db"]

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# output
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = ["graphviz.*", "pygraphviz.*", "sqlalchemy.*"]
ignore_missing_imports = true


[tool.ruff]
ignore-init-module-imports = true
fix = true
select = ["D", "E", "F", "W", "I", "UP", "G"]
ignore = [
  "D100",  # Missing docstring in public module
  "D101",  # Missing docstring in public class
  "D102",  # Missing docstring in public method
  "D103",  # Missing docstring in public function
  "D104",  # Missing docstring in public package
  "D105",  # Missing docstring in magic method
  "D107",  # Missing docstring in `__init__`
  "E501",  # line too long
]
line-length = 100

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.pydocstyle]
convention = "google"
